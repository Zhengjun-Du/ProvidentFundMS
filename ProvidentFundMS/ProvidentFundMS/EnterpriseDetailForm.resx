<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wgARCAClALcDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAQGAQMFAgf/xAAZAQEAAwEBAAAAAAAAAAAAAAAAAgMEAQX/2gAMAwEA
        AhADEAAAAb+AAYGuBIN7QN7QN7QN7QJeeZ0wAAAAB48+DTNgzTLAywMsDLGCD0ebMNzVtAAAEGdAKX68
        5LnMhS3PTyd9PI9PI9YwOdUrZUj1faBfjcAABzujyimeuT7PpEuJKMsDLAywMsDn024fOzqfQ/lH1UkA
        AR90M269YqOJWjd5831AdT0AT0AT0AT0AS4PserhWbBm1SPcX3TdNYHiFNgmWBXub3a1swyEdbVIRxIR
        xIRxIRxIRxYe3Bm4d+WELOiDxAn849PIcfsJR4zspQ4zsjjOyOM7I4zsjje+s5308oWenkdRgeOX0+Qb
        WsbGsbGsbGsbGsbGsbGsbGsbGsbGvB2wauJ3a2b2gb3H5JblRFuVEW5URblRFuVEW5URbnMmG9o9FlZG
        rk9vyVfFn8nyzuXLJTl4FHXgUdeBR14FHXgUfxe4p82tdj9lb6XUyeG0ZABiOAAAAADISAAAf//EACgQ
        AAECBQIGAwEBAAAAAAAAAAACEQEDBBMVEjIQFCAwMTMFISI0QP/aAAgBAQABBQLqjFi4guILiC4guILi
        C4guILiO9BMahXLyzlpZy0s5aWctLOWlnLSzlpZy0sg8ib21bab1dmo3dq4gVMRppvV2ajzcQXEdisjG
        FKQ3U/r7NXt4S/uX1Vv8hDdT+vs1e3hK9XVXfxuJj+qf19mr2uaiV6er5KOmgvQETYa5Gzs1ey9AvQJH
        o6FLGUTJcJqI08h7EmBCcuBfmF+YX5hfmF+YX5hfmF+YX5gqYpRy8glUshU2CdMP0JW/BX0mH1DhN/M5
        xxxxxxxxxxxxyl+554Ix4L28a2Gmc4444444444445QQ6IeF7ONeh5LjjjjjjjjjjjjlIi3T8YeF7OMY
        QjDHS3xyDHIMcgxyDHIMcgxyDHIMcgxyDHIE/Hy0q6IeF7P8sPEz1/5YeJvrcccccccccccccccccccc
        cTtnepxxxxxxxxxxxxxxxxxxxxxO2ZDVLcccqa6XTGYMyZkzJmTMmZMyZkzJmTMmYKerl1KXHIfcYeNZ
        Olao6FmlZyVRMqYfFIVDEIMQgxCDEIMQgxCDEIMQgxCDEIMQgV8VLRCnpKmTU6VltZIl246xjTA0JLSR
        cpOiVptukdI6R0jpHSOkdI6R0jpJ7RTCUlraTQk0wG6YllBYQWEFhBYQWEFhBYQWEFhBYQWEFlPV/8QA
        HhEAAgICAwEBAAAAAAAAAAAAABEBAhNRAyAxUBL/2gAIAQMBAT8B+lMyORyORyOT9ScHnXlhWGMYxjOO
        FXrakW9MVNGKmjFTRipoxU0Yqa+p/8QAHhEAAgEEAwEAAAAAAAAAAAAAAAECAxITUREgMVD/2gAIAQIB
        AT8B+kki1FqLUWotRait71pPmPeo+ZdVJx8Ms9mWezLPZlnsyz2ZJb+p/8QALRAAAgADBgQGAgMAAAAA
        AAAAAAECMTIQESAwM6EDIUCBEiJRYXGRE0EjQnL/2gAIAQEABj8Cx1IqRUipFSKkVIqRUs5tvyokSJEi
        RIkSJChv8rzGd8qDLrX2PzL7O+VAVr7KlkR3WI75Sth+McdiO+UrYPjHxLEd8pWwfGPiuyH5O+bw/wDK
        w3I5xDgjaihf6H/HCX/jhOUTK2VsrZWytlbK2VsrZ5neaUJCvxwzLlFyRyd5c7fe2Je+cva2+x4L/VZ0
        UXbC8HiX9c6H1fPC8FzkVxFcRXEVxFcRXEVxFcRXEVxFcRXEJuJv2xPp30yH0yIumREsFz5xeiNHc0dz
        R3NHc0dzR3NHc0dzR3NHc0dzR3NHcvgfP9q1K3xQ8iRSeLicN3N8y/wlJSUlJSUlJSUlJSUiiXDd1+xI
        kXvm8ErGImiaJomiaJomiaJomiaF1v8A/8QAJxAAAgEBCAMAAgMAAAAAAAAAAAERMRAhMGFxkaHxIEFR
        QIGx4fD/2gAIAQEAAT8h8kJLcHZHZHZHZHZHZHZHZHYCc0piO5SOLJ0JIz25mtzNbma3M1uZrczW5mtx
        /VuTgzpzicbDnNxNNoVPDR9+zSY4U+uAx2hxZzCvhOA7KOUO23WPnw7OYVMJwHbwvm0aFndCoJJJJJJJ
        Js4DtuJ88lEv5MwaVPoV8I8fqzMMwaXf4jxbPtMgE2Qvb2JKpP4J5IpoQwksLMzMzMxPDUzsBmYmIldI
        hIhbxZwsaRjX6qK1/Ak//wD6RNiba5kkLX2K9WKbYX1xr/8Ayvw1DTxDF1mv0xv/APCH9HhQ0OBZNjGi
        WUNDc0IXzE7u7u7u7lVNXyskmynpZpJJJJJJJJJJJJJJJJJJJJKehwSSSSSSSSSSSSSSSSSSSSSTjHD/
        ABgAABwDhfjAAADgIekq14KpL8W7bbbbbSze8ZG4ASrVWk1lWxIRfEPKSN6dUNfuRex7Tmz+EcLGJJJJ
        JJJA1YqbumM6JpR/RIshD4ZdkyRJq+DpI0jtDtDtDtDtDtDtDtDtDtDtC5TTvIYXyF8iD0Q+eKJqHRmt
        uam5qbmpuam5qbmpuam5qbmpuam5qbiW5hi8f//aAAwDAQACAAMAAAAQ888U88844888840IAAAEEw88
        8o0tMMMc8M8884E0888sco88UIXMMMMMo4AM8s6xxxxxhlMAgAgBBBBBSAAM8AAAAAAAAAEwkMAAAAAA
        EEIAEsYxxxxxgwEw88gAAAAAAc88/8QAGxEBAAMBAQEBAAAAAAAAAAAAAQARYSBQITH/2gAIAQMBAT8Q
        9Ialzdm7N2bs3ZrLLV5u97ArR5/C31JJAPvqP//EABwRAAMBAAIDAAAAAAAAAAAAAAABEWEgUCExUf/a
        AAgBAgEBPxDsm0nDExMTExMCEqXzjBwhCEIQrPj75OQAAb/HaP/EACkQAAIBAgQFBQEBAQAAAAAAAAAB
        ESFhMVFx8SBBgaGxEDCRwfBA0eH/2gAIAQEAAT8Q4oI0zbF7EpSlKUpSOK4Uksm2DT9x0xnCVWZ2IAez
        IQhCEIUDBuMCBsgXt9z8GPq8L2zXP2W0lLolzGhtOVWDBNtoSQobV4RJJJJJJJJIhMbhJ22baEZm2CSi
        42naWVdiSyFXIweTuP0SSSSSSSSSfqZELJCcDIacpqkDym2a2+bhcfavKJQ/wfI/yjodDodDodDodPT8
        TITG6D/j5LjkVnlEYEtc8vkaNR7IBI36OQlghmVv/cLjQ3cLwgosPyRs1Vjcpp8xNibE2JsTYmxNibCd
        cCIeT+wosPyWvyRdzd2cDKDzgkWKt8pIKQq9DFTC+Q4kCaaTox8lKYTNzNzNzNzNzNzNzNzNzJXemobk
        8Rf8gge0nKpAlEsSwSWCGnBRckyfBGfMQ9FilQlrS8kNtpZt5spkK3dIZrR1+/eAALOiUxvgixOGKMig
        ySuE+x4HmpO2KkrUJJoRBRB9VR/RDMhmQzIZkMyGZDMhmQzIZkMyGZqGOlgknkwJJo1yZ2w7QkkkStM7
        Uo/r0TJkyZMmTJkyZP0sS47vh2JJJO3enT6JFLnTHNMdDk5UFQ29G3o29G3o29G3o29G3o29G3o29D2M
        4BJ6icL/AD1JOxHamL+UAAA7EPAMf8v/AP8A+OsGhoX8oAAA7H4Ghh1ms1ms1ms1ms1ms1ms1ms1ms1m
        s1mv0/vZGMEUtSabTo1Ro1GsUqBJUUrV8jG4aLiQSCQSCQSCQSCQSCQRkTmxBkYyZ/0VzWaxqtpJItaI
        ikrjNVyW8yjPpQNJuVpYUEqfzUTSlhjhAnKGpQty3Lcty3Lcty3Lcty3KwhRIUdbNlQ2epNgD+E61Zpb
        aUE5b8UGzFRuxDcEZOUzQpn1aNrM2YbMNmGzDZhsw2YbMNmGzDZhDH0ZhyThp1SEyhgVhlEnBOFjVNBk
        zmFFgrBWCsFYKwVgrBWCsFYJXkRWGzBw/wD/2Q==
</value>
  </data>
</root>